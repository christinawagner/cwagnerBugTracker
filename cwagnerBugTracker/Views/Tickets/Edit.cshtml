@model cwagnerBugTracker.Models.Ticket

@{
    ViewBag.Title = "Edit";
}

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Edit Ticket</h4>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TicketTypeId, "TicketTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TicketPriorityId, "TicketPriorityId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.ProjectId, "ProjectId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.TicketStatusId, "TicketStatusId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @if (User.IsInRole(Domain.Roles.Admin) || User.IsInRole(Domain.Roles.ProjectManager) || User.IsInRole(Domain.Roles.Super))
                {
                                    @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                                }
                                else
                                {
                                    @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                                }
                                @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.OwnerUserId, "OwnerUserId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("OwnerUserId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.OwnerUserId, "", new { @class = "text-danger" })
                                </div>
                            </div>*@


                        <div class="form-group">
                            @Html.LabelFor(model => model.AssignToUserId, "AssignToUserId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @if (User.IsInRole(Domain.Roles.Admin) || User.IsInRole(Domain.Roles.ProjectManager) || User.IsInRole(Domain.Roles.Super))
                {
                                    @Html.DropDownList("AssignToUserId", null, htmlAttributes: new { @class = "form-control" })
                                }
                                else
                                {
                                    @Html.DropDownList("AssignToUserId", null, htmlAttributes: new { @class = "form-control", disabled = "disabled" })

                                }
                                @Html.ValidationMessageFor(model => model.AssignToUserId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
